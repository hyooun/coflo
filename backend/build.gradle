plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id "com.diffplug.spotless" version "6.25.0"
}

group = 'com.reviewping'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring boot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // DB
    runtimeOnly 'org.postgresql:postgresql'

    // Docker Compose
    developmentOnly("org.springframework.boot:spring-boot-docker-compose")

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // OAuth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // JWT
    implementation("io.jsonwebtoken:jjwt-api:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5")

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

spotless {

    format 'misc', {
        target '*.gradle'
        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
    }
    java {
        removeUnusedImports()
        googleJavaFormat().aosp().reflowLongStrings().skipJavadocFormatting()
        formatAnnotations()
    }
}
